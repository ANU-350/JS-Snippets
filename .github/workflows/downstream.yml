#
# Copyright (c) 2022, Rivos Inc. and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.  Oracle designates this
# particular file as subject to the "Classpath" exception as provided
# by Oracle in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

name: 'OpenJDK Downstreaming'

on:
  schedule:
    # Trigger on every Mondays at 07:00 UTC (09:00 CET, 00:00 PT)
    - cron: '0 6 * * 1'

jobs:

  fetch-merge-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'merge-upstream'
      - run: |
        # Make sure the whole step fails if any of the commands fail
        set -eux

        # 1. fetch upstream's tags
        git remote add upstream https://github.com/openjdk/jdk.git
        git fetch --tags upstream

        # 2. try merging upstream's latest tag
        TAG=$(git tag | grep -E '^jdk\-.*' | sort -V | tail -n 1)
        echo "Trying to merge tag $TAG"
        git merge --no-edit upstream/$TAG

        # 3. check if there are unmerged changes
        if [[ -n "$(git status --porcelain=v1 | grep -E '^[DAU][DAU]')" ]]; then
          # Force add all files, we'll fix the merge conflicts by hand in the PR
          git add --all --force
          git merge --no-edit --continue
        fi

        # 4. push back to origin branch
        git push origin HEAD

  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - uses: repo-sync/pull-request@v2
        id: open-pull-request
        with:
          source_branch: 'merge-upstream'
          destination_branch: 'master'
          pr_title: 'Merge latest upstream release into master'
          pr_reviewer: 'luhenry'
          pr_assignee: 'luhenry'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
        echo "Opened ${{ steps.open-pull-request.outputs.pr_url }}"
