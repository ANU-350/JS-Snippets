/*
 * Copyright (c) 2023, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package jdk.internal.misc;

import jdk.internal.util.StaticProperty;

/**
 * Initialization of current operating system and architecture are delayed until used.
 */
public class InitPlatform {

    static final String LINUX_CNAME = "linux";
    static final String MACOS_CNAME = "macosx";
    static final String WINDOWS_CNAME = "windows";
    static final String AIX_CNAME = "aix";

    // Unique integers named to match the build system naming of the build target.
    private static final int OS_TARGET_linux   = 1;
    private static final int OS_TARGET_macosx  = 2;
    private static final int OS_TARGET_windows = 3;
    private static final int OS_TARGET_aix     = 4;

    // Precomputed booleans for each Operating System
    static final boolean OS_TARGET_IS_LINUX   = OS_TARGET_@@OPENJDK_TARGET_OS@@ == OS_TARGET_linux;
    static final boolean OS_TARGET_IS_MACOS   = OS_TARGET_@@OPENJDK_TARGET_OS@@ == OS_TARGET_macosx;
    static final boolean OS_TARGET_IS_WINDOWS = OS_TARGET_@@OPENJDK_TARGET_OS@@ == OS_TARGET_windows;
    static final boolean OS_TARGET_IS_AIX     = OS_TARGET_@@OPENJDK_TARGET_OS@@ == OS_TARGET_aix;

    private static final String OPENJDK_TARGET_OS =
        "@@OPENJDK_TARGET_OS@@";

    private static final String OPENJDK_TARGET_CPU =
        "@@OPENJDK_TARGET_CPU@@";

    // Read by Runtime.OperatingSystem
    static String targetOS() {
        return OPENJDK_TARGET_OS;
    }

    // Read by Runtime.Architecture
    static String targetCpu() {
        return OPENJDK_TARGET_CPU;
    }
}
