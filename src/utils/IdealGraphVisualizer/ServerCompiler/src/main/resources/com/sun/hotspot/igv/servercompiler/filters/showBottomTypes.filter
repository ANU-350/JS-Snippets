// This filter appends simplified bottom type information to the (possibly
// already existing) extra-label line.

function appendTypeInfo(extra_label, type) {
  if (type == null) {
    return extra_label;
  }
  var callTypeStart = "{0:control, 1:abIO, 2:memory, 3:rawptr:BotPTR, 4:return_address";
  if (type.startsWith(callTypeStart)) {
    // Exclude types of the first five outputs of call-like nodes.
    type = type.replace(callTypeStart, "").replace("}", "");
    type = "{" + type.replace(", ", "") + "}";
  }
  type = simplify_reference_type(type);
  new_extra_label = extra_label == null ? "" : (extra_label + " ");
  return new_extra_label + type;
}

editProperty(not(or([matches("name", "Start"),
                     matches("bottom_type", "bottom"),
                     matches("bottom_type", "abIO")])),
             ["extra_label", "bottom_type"], "extra_label",
             function(propertyValues) {return appendTypeInfo(propertyValues[0], propertyValues[1]);});
