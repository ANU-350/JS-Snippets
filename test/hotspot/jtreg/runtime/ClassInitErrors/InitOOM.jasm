/*
 * Copyright (c) 2021, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */

super class InitOOM
	version 62:0
{

Method "<init>":"()V"
	stack 1 locals 1
{
		aload_0;
		invokespecial	Method java/lang/Object."<init>":"()V";
		return;
}

// Throw OOM from class initializer.
static Method "<clinit>":"()V"
	stack 1 locals 0
{
                invokestatic    Method "foo":"()V";
		return;
}

static Method foo:"()V"
	throws java/lang/Exception
	stack 2 locals 2
{
		new	class java/util/ArrayList;
		dup;
		invokespecial	Method java/util/ArrayList."<init>":"()V";
		astore_0;
	L8:	stack_frame_type append;
		locals_map class java/util/ArrayList;
		sipush	16384;
		istore_1;
	L12:	stack_frame_type append;
		locals_map int;
		iload_1;
		ifle	L32;
		aload_0;
		sipush	1024;
		newarray byte;
		invokevirtual	Method java/util/ArrayList.add:"(Ljava/lang/Object;)Z";
		pop;
		iinc	1, -1;
		goto	L12;
	L32:	stack_frame_type chop1;
		goto	L8;
}

} // end Class InitOOM
