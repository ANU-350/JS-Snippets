/*
  * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
  * This code is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * version 2 for more details (a copy is included in the LICENSE file that
  * accompanied this code).
  *
  * You should have received a copy of the GNU General Public License version
  * 2 along with this work; if not, write to the Free Software Foundation,
  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  *
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */

/* DO NOT MODIFY THIS FILE. GENERATED BY TestGenerator */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.FindAny.seq_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.FindAny.seq_invoke
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.FindFirst.par_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.FindFirst.par_invoke
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.FindFirst.seq_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.FindFirst.seq_invoke
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.ForEach.par_chain111
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.ForEach.par_chain111
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.ForEach.par_chain123
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.ForEach.par_chain123
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.ForEach.par_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.ForEach.par_invoke
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.ForEach.seq_chain111
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.ForEach.seq_chain111
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.ForEach.seq_chain123
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.ForEach.seq_chain123
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.ForEach.seq_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.ForEach.seq_invoke
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.par_baseline
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.par_baseline
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limit0
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limit0
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limit1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limit1
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limitFull
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limitFull
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limitFullest
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limitFullest
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limitHalf
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.par_limitHalf
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_baseline
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_baseline
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limit0
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limit0
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limit1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limit1
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limitFull
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limitFull
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limitFullest
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limitFullest
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limitHalf
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Limit.seq_limitHalf
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Map.par_chain_111
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Map.par_chain_111
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Map.par_chain_123
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Map.par_chain_123
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Map.par_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Map.par_invoke
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Map.seq_chain_111
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Map.seq_chain_111
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Map.seq_chain_123
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Map.seq_chain_123
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.Map.seq_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.Map.seq_invoke
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.NoneMatch.par_chain111
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.NoneMatch.par_chain111
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.NoneMatch.par_chain123
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.NoneMatch.par_chain123
 */

/**
 * @test org.openjdk.bench.java.util.stream.ops.ref.NoneMatch.par_invoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.util.stream.ops.ref.NoneMatch.par_invoke
 */

