/*
  * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
  * This code is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * version 2 for more details (a copy is included in the LICENSE file that
  * accompanied this code).
  *
  * You should have received a copy of the GNU General Public License version
  * 2 along with this work; if not, write to the Free Software Foundation,
  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  *
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */

/* DO NOT MODIFY THIS FILE. GENERATED BY TestGenerator */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.test_A1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.test_A1
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.test_A2
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.test_A2
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.test_A3
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.test_A3
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeChangeParam.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeChangeParam.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeChangeParam.baselineSame
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeChangeParam.baselineSame
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeChangeParam.testChangeType
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeChangeParam.testChangeType
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeChangeReturn.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeChangeReturn.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeChangeReturn.baselineSame
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeChangeReturn.baselineSame
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeChangeReturn.testChange
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeChangeReturn.testChange
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.baselineSame
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.baselineSame
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.testDrop_A1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.testDrop_A1
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.testDrop_A2
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.testDrop_A2
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.testDrop_A3
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeDropParams.testDrop_A3
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testErase
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testErase
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testGeneric
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testGeneric
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testUnwrap
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testUnwrap
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testWrap
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testWrap
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testWrapErase
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeGenerify.testWrapErase
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.baselineSame
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.baselineSame
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.testInsert_A1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.testInsert_A1
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.testInsert_A2
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.testInsert_A2
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.testInsert_A3
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeInsertParams.testInsert_A3
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.StringConcatFactoryBootstraps.makeConcatWithConstants
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.StringConcatFactoryBootstraps.makeConcatWithConstants
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.SwitchPointAdhoc.baselineCS
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.SwitchPointAdhoc.baselineCS
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.SwitchPointAdhoc.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.SwitchPointAdhoc.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.SwitchPointAdhoc.testInvalid
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.SwitchPointAdhoc.testInvalid
 */

