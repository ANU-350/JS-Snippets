/*
  * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
  * This code is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * version 2 for more details (a copy is included in the LICENSE file that
  * accompanied this code).
  *
  * You should have received a copy of the GNU General Public License version
  * 2 along with this work; if not, write to the Free Software Foundation,
  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  *
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */

/* DO NOT MODIFY THIS FILE. GENERATED BY TestGenerator */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesIdentity.testInvoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesIdentity.testInvoke
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesIdentity.testInvokeCached
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesIdentity.testInvokeCached
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C0
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C0
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C1
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C2
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C2
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C3
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesInsertArguments.invoke_C3
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesInvoker.baselineOrig
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesInvoker.baselineOrig
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesInvoker.testInvoker
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesInvoker.testInvoker
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_NoReorder
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_NoReorder
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_Raw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_Raw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_Reverse
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_Reverse
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_Shift
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesPermuteArguments.invoke_Shift
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesSpreadInvoker.baselineOrig
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesSpreadInvoker.baselineOrig
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesSpreadInvoker.testInvoker
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesSpreadInvoker.testInvoker
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesSpreadInvoker.testInvokerCached
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesSpreadInvoker.testInvokerCached
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.baselineRawCached
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.baselineRawCached
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.interCreate
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.interCreate
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.testInvoke
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.testInvoke
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.testInvokeCached
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodHandlesThrowException.testInvokeCached
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.baselineRaw
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.baselineRaw
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testMultiPType
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testMultiPType
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testMultiPType_Arg
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testMultiPType_Arg
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testReturnInt
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testReturnInt
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testReturnObject
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testReturnObject
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testReturnVoid
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testReturnVoid
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testSinglePType
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAcquire.testSinglePType
 */

/**
 * @test org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.baselineNop
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.invoke.MethodTypeAppendParams.baselineNop
 */

