/*
  * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
  * This code is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * version 2 for more details (a copy is included in the LICENSE file that
  * accompanied this code).
  *
  * You should have received a copy of the GNU General Public License version
  * 2 along with this work; if not, write to the Free Software Foundation,
  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  *
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */

/* DO NOT MODIFY THIS FILE. GENERATED BY TestGenerator */

/**
 * @test org.openjdk.bench.java.lang.MathBench.floorModIntInt
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.MathBench.floorModIntInt
 */

/**
 * @test org.openjdk.bench.java.lang.MathBench.floorModIntIntPositive
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.MathBench.floorModIntIntPositive
 */

/**
 * @test org.openjdk.bench.java.lang.MathBench.floorModLongInt
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.MathBench.floorModLongInt
 */

/**
 * @test org.openjdk.bench.java.lang.MathBench.floorModLongLong
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.MathBench.floorModLongLong
 */

/**
 * @test org.openjdk.bench.java.lang.NewInstance.threeDifferentProtected
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.NewInstance.threeDifferentProtected
 */

/**
 * @test org.openjdk.bench.java.lang.NewInstance.threeDifferentPublic
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.NewInstance.threeDifferentPublic
 */

/**
 * @test org.openjdk.bench.java.lang.NewInstance.threeDifferentPublicConstant
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.NewInstance.threeDifferentPublicConstant
 */

/**
 * @test org.openjdk.bench.java.lang.NewInstance.threeDifferentPublicFinal
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.NewInstance.threeDifferentPublicFinal
 */

/**
 * @test org.openjdk.bench.java.lang.NewInstance.threeSameProtected
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.NewInstance.threeSameProtected
 */

/**
 * @test org.openjdk.bench.java.lang.NewInstance.threeSamePublic
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.NewInstance.threeSamePublic
 */

/**
 * @test org.openjdk.bench.java.lang.ObjectHashCode.mode_0
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.ObjectHashCode.mode_0
 */

/**
 * @test org.openjdk.bench.java.lang.ObjectHashCode.mode_1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.ObjectHashCode.mode_1
 */

/**
 * @test org.openjdk.bench.java.lang.ObjectHashCode.mode_2
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.ObjectHashCode.mode_2
 */

/**
 * @test org.openjdk.bench.java.lang.ObjectHashCode.mode_3
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.ObjectHashCode.mode_3
 */

/**
 * @test org.openjdk.bench.java.lang.ObjectHashCode.mode_4
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.ObjectHashCode.mode_4
 */

/**
 * @test org.openjdk.bench.java.lang.ObjectHashCode.mode_5
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.ObjectHashCode.mode_5
 */

/**
 * @test org.openjdk.bench.java.lang.ObjectHashCode.mode_default
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.ObjectHashCode.mode_default
 */

/**
 * @test org.openjdk.bench.java.lang.RotateBenchmark.testRotateLeftI
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.RotateBenchmark.testRotateLeftI
 */

/**
 * @test org.openjdk.bench.java.lang.RotateBenchmark.testRotateLeftL
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.RotateBenchmark.testRotateLeftL
 */

/**
 * @test org.openjdk.bench.java.lang.RotateBenchmark.testRotateRightI
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.RotateBenchmark.testRotateRightI
 */

/**
 * @test org.openjdk.bench.java.lang.RotateBenchmark.testRotateRightL
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.java.lang.RotateBenchmark.testRotateRightL
 */

/**
 * @test org.openjdk.bench.java.lang.StackWalkBench.forEach_DefaultOpts
 * @library /test/lib /
 * @run driver/timeout=360 MicroRunner -f 1 org.openjdk.bench.java.lang.StackWalkBench.forEach_DefaultOpts
 */

/**
 * @test org.openjdk.bench.java.lang.StackWalkBench.getCallerClass
 * @library /test/lib /
 * @run driver/timeout=360 MicroRunner -f 1 org.openjdk.bench.java.lang.StackWalkBench.getCallerClass
 */

/**
 * @test org.openjdk.bench.java.lang.StackWalkBench.walk_ClassNames
 * @library /test/lib /
 * @run driver/timeout=360 MicroRunner -f 1 org.openjdk.bench.java.lang.StackWalkBench.walk_ClassNames
 */

