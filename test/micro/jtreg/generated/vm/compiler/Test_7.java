/*
  * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
  * This code is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * version 2 for more details (a copy is included in the LICENSE file that
  * accompanied this code).
  *
  * You should have received a copy of the GNU General Public License version
  * 2 along with this work; if not, write to the Free Software Foundation,
  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  *
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */

/* DO NOT MODIFY THIS FILE. GENERATED BY TestGenerator */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.NoSuperword.orRedL
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.NoSuperword.orRedL
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.NoSuperword.xorRedI
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.NoSuperword.xorRedI
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.NoSuperword.xorRedL
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.NoSuperword.xorRedL
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.andRedI
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.andRedI
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.andRedL
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.andRedL
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.orRedI
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.orRedI
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.orRedL
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.orRedL
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.xorRedI
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.xorRedI
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.xorRedL
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorReduction.WithSuperword.xorRedL
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateByte
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateByte
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateInt
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateInt
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateLong
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateLong
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateShort
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftRightAccumulateShort
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateByte
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateByte
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateChar
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateChar
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateInt
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateInt
 */

/**
 * @test org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateLong
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.VectorShiftAccumulate.shiftURightAccumulateLong
 */

/**
 * @test org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathNullLarge
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathNullLarge
 */

/**
 * @test org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathNullSmall
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathNullSmall
 */

/**
 * @test org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathRealLarge
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathRealLarge
 */

/**
 * @test org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathRealSmall
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.WriteBarrier.testArrayWriteBarrierFastPathRealSmall
 */

/**
 * @test org.openjdk.bench.vm.compiler.WriteBarrier.testFieldWriteBarrierFastPath
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.WriteBarrier.testFieldWriteBarrierFastPath
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_baseline
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_baseline
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_repeat
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_repeat
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_repeat_c1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_repeat_c1
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_repeat_c2
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.largeMethod_repeat_c2
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_baseline
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_baseline
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_repeat
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_repeat
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_repeat_c1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_repeat_c1
 */

/**
 * @test org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_repeat_c2
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.overhead.SimpleRepeatCompilation.mixHashCode_repeat_c2
 */

