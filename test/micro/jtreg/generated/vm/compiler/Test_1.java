/*
  * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
  * This code is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * version 2 for more details (a copy is included in the LICENSE file that
  * accompanied this code).
  *
  * You should have received a copy of the GNU General Public License version
  * 2 along with this work; if not, write to the Free Software Foundation,
  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  *
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */

/* DO NOT MODIFY THIS FILE. GENERATED BY TestGenerator */

/**
 * @test org.openjdk.bench.vm.compiler.ArrayStoreCheck.testArrayStoreCheckRemove1
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.ArrayStoreCheck.testArrayStoreCheckRemove1
 */

/**
 * @test org.openjdk.bench.vm.compiler.BitSetAndReset.bitSet
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.BitSetAndReset.bitSet
 */

/**
 * @test org.openjdk.bench.vm.compiler.BitSetAndReset.throughput
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.BitSetAndReset.throughput
 */

/**
 * @test org.openjdk.bench.vm.compiler.BitTest.bitTestAndBranch
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.BitTest.bitTestAndBranch
 */

/**
 * @test org.openjdk.bench.vm.compiler.CopyLoop.testCharAtLoop
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.CopyLoop.testCharAtLoop
 */

/**
 * @test org.openjdk.bench.vm.compiler.CopyLoop.testInlineAndUnrollAndHoistCharAtLoop
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.CopyLoop.testInlineAndUnrollAndHoistCharAtLoop
 */

/**
 * @test org.openjdk.bench.vm.compiler.CopyLoop.testInlineAndUnrollCharAtLoop
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.CopyLoop.testInlineAndUnrollCharAtLoop
 */

/**
 * @test org.openjdk.bench.vm.compiler.CopyLoop.testInlineCharAtLoop
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.CopyLoop.testInlineCharAtLoop
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.test32DivRem32
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.test32DivRem32
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.test64DivRem32
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.test64DivRem32
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.test64DivRem64
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.test64DivRem64
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.testIntDivConstantDivisor
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.testIntDivConstantDivisor
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.testIntDivRemVariableDivisor
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.testIntDivRemVariableDivisor
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.testIntDivVariableDivisor
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.testIntDivVariableDivisor
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.testIntRemConstantDivisor
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.testIntRemConstantDivisor
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.testLongDivConstantDivisor
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.testLongDivConstantDivisor
 */

/**
 * @test org.openjdk.bench.vm.compiler.DivRem.testLongRemConstantDivisor
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.DivRem.testLongRemConstantDivisor
 */

/**
 * @test org.openjdk.bench.vm.compiler.Explosion.testHashtableExplosion
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Explosion.testHashtableExplosion
 */

/**
 * @test org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testScalarAbsDiffDouble
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testScalarAbsDiffDouble
 */

/**
 * @test org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testScalarAbsDiffFloat
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testScalarAbsDiffFloat
 */

/**
 * @test org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testVectorAbsDiffDouble
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testVectorAbsDiffDouble
 */

/**
 * @test org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testVectorAbsDiffFloat
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FloatingScalarVectorAbsDiff.testVectorAbsDiffFloat
 */

/**
 * @test org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.dMax
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.dMax
 */

/**
 * @test org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.dMin
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.dMin
 */

/**
 * @test org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.dMinReduce
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.dMinReduce
 */

/**
 * @test org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.fMax
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.fMax
 */

/**
 * @test org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.fMin
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.fMin
 */

/**
 * @test org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.fMinReduce
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.FpMinMaxIntrinsics.fMinReduce
 */

/**
 * @test org.openjdk.bench.vm.compiler.InnerClassNullRef.refIsNotNull
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.InnerClassNullRef.refIsNotNull
 */

/**
 * @test org.openjdk.bench.vm.compiler.InnerClassNullRef.refIsNull
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.InnerClassNullRef.refIsNull
 */

