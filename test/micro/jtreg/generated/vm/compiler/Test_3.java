/*
  * Copyright (c) 2020, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
  * under the terms of the GNU General Public License version 2 only, as
  * published by the Free Software Foundation.
  *
  * This code is distributed in the hope that it will be useful, but WITHOUT
  * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
  * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
  * version 2 for more details (a copy is included in the LICENSE file that
  * accompanied this code).
  *
  * You should have received a copy of the GNU General Public License version
  * 2 along with this work; if not, write to the Free Software Foundation,
  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
  *
  * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
  * or visit www.oracle.com if you need additional information or have any
  * questions.
  */

/* DO NOT MODIFY THIS FILE. GENERATED BY TestGenerator */

/**
 * @test org.openjdk.bench.vm.compiler.MacroLogicOpt.workload3_caller
 * @library /test/lib /
 * @run driver/timeout=840 MicroRunner -f 1 org.openjdk.bench.vm.compiler.MacroLogicOpt.workload3_caller
 */

/**
 * @test org.openjdk.bench.vm.compiler.Multiplication.testLongBigVariableBigConstantMul
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Multiplication.testLongBigVariableBigConstantMul
 */

/**
 * @test org.openjdk.bench.vm.compiler.Multiplication.testLongBigVariableSmallConstantMul
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Multiplication.testLongBigVariableSmallConstantMul
 */

/**
 * @test org.openjdk.bench.vm.compiler.Multiplication.testLongSmallVariableBigConstantMul
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Multiplication.testLongSmallVariableBigConstantMul
 */

/**
 * @test org.openjdk.bench.vm.compiler.Multiplication.testLongSmallVariableSmallConstantMul
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Multiplication.testLongSmallVariableSmallConstantMul
 */

/**
 * @test org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithNonNullStores
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithNonNullStores
 */

/**
 * @test org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithNullStores
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithNullStores
 */

/**
 * @test org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithNullVolatileStores
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithNullVolatileStores
 */

/**
 * @test org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithoutStores
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.PostAllocationStores.testAllocationWithoutStores
 */

/**
 * @test org.openjdk.bench.vm.compiler.SkipIntToLongCast.skipCastTestLeft
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.SkipIntToLongCast.skipCastTestLeft
 */

/**
 * @test org.openjdk.bench.vm.compiler.SkipIntToLongCast.skipCastTestRight
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.SkipIntToLongCast.skipCastTestRight
 */

/**
 * @test org.openjdk.bench.vm.compiler.SkipIntToLongCast.skipMaskedSmallPositiveCast
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.SkipIntToLongCast.skipMaskedSmallPositiveCast
 */

/**
 * @test org.openjdk.bench.vm.compiler.SpillCode.testSpillForManyInts
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.SpillCode.testSpillForManyInts
 */

/**
 * @test org.openjdk.bench.vm.compiler.StoreAfterStore.testAllocAndZeroStore
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.StoreAfterStore.testAllocAndZeroStore
 */

/**
 * @test org.openjdk.bench.vm.compiler.StoreAfterStore.testStoreAndStore
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.StoreAfterStore.testStoreAndStore
 */

/**
 * @test org.openjdk.bench.vm.compiler.Straighten.testStraighten1int
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Straighten.testStraighten1int
 */

/**
 * @test org.openjdk.bench.vm.compiler.Straighten.testStraighten1long
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Straighten.testStraighten1long
 */

/**
 * @test org.openjdk.bench.vm.compiler.Straighten.testStraighten2int
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Straighten.testStraighten2int
 */

/**
 * @test org.openjdk.bench.vm.compiler.Straighten.testStraighten2long
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Straighten.testStraighten2long
 */

/**
 * @test org.openjdk.bench.vm.compiler.Straighten.testStraighten3int
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Straighten.testStraighten3int
 */

/**
 * @test org.openjdk.bench.vm.compiler.Straighten.testStraighten3long
 * @library /test/lib /
 * @run driver MicroRunner -f 1 org.openjdk.bench.vm.compiler.Straighten.testStraighten3long
 */

/**
 * @test org.openjdk.bench.vm.compiler.TypeVectorOperations.TypeVectorOperationsNonSuperWord.absB
 * @library /test/lib /
 * @run driver/timeout=360 MicroRunner -f 1 org.openjdk.bench.vm.compiler.TypeVectorOperations.TypeVectorOperationsNonSuperWord.absB
 */

