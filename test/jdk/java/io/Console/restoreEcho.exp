#
# Copyright (c) 2024, Oracle and/or its affiliates. All rights reserved.
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
# or visit www.oracle.com if you need additional information or have any
# questions.
#

set initialEcho [lrange $argv 0 0]
set java [lrange $argv 1 end]
set prompt "prompt: "
set pwprompt "password prompt: "
set input "InPuT"
set password "PaSsWoRd"
set expected "input is $input"
set pwexpected "password is $password"
set timeout 2

eval spawn $java

# readLine() - input is displayed depending on initialEcho value
expect "$prompt"
send -- "$input\n"
if {$initialEcho == "true"} {
    expect "$input"
}
expect "$expected"

if {$expect_out(0,string) != $expected} {
    send_error "Expected: $expected\n"
    send_error "Received: $expect_out(0,string)"
    exit 1
}

# readPassword() - password is not displayed regardless of initialEcho value
expect "$pwprompt"
send -- "$password\n"
expect "$pwexpected"

if {$expect_out(0,string) != $pwexpected} {
    send_error "Expected: $pwexpected\n"
    send_error "Received: $expect_out(0,string)"
    exit 1
}
expect eof
